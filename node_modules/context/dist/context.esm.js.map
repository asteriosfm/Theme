{"version":3,"file":"context.esm.js","sources":["../src/index.ts"],"sourcesContent":["type TypeCTXRef = { [key: string]: any };\n\nexport interface ICTXFN {\n  (context: Context): any;\n}\ninterface Init {\n  (ctxRef?: TypeCTXRef, parentContext?: Context | void): TypeCTXRef | null;\n}\n\ntype ContextOptions = {\n  use: () => Context | void;\n  set: (value: any) => any;\n  addQueryableProperties: (ctxRef: TypeCTXRef) => TQueryableProperties;\n  init?: Init;\n};\n\ntype TQueryableProperties = { [key: string]: true };\n\nexport type TCTX = {\n  use: () => Context | void;\n  run: (ctxRef: TypeCTXRef, fn: ICTXFN) => any;\n  bind: (\n    ctxRef: TypeCTXRef,\n    fn: (...args: any[]) => any,\n    ...args: any[]\n  ) => (...runTimeArgs: any[]) => any;\n};\n\nconst getInnerName = (name: string): string => `__${name}`;\n\nclass Context {\n  private _parentContext: Context | null = null;\n  [key: string]: any;\n\n  static is(value: any): value is Context {\n    return value instanceof Context;\n  }\n\n  constructor(\n    { use, set, addQueryableProperties, init }: ContextOptions,\n    ctxRef: TypeCTXRef\n  ) {\n    const ctx = use();\n\n    const usedRef =\n      typeof init === 'function' ? init(ctxRef, ctx) ?? ctxRef : ctxRef;\n\n    const queryableProperties = addQueryableProperties(usedRef);\n\n    if (usedRef && typeof usedRef === 'object') {\n      for (const key in queryableProperties) {\n        if (Object.prototype.hasOwnProperty.call(usedRef, key)) {\n          this[getInnerName(key)] = usedRef[key];\n        }\n        this.addLookupProperty(key);\n      }\n    }\n\n    if (ctx) {\n      this.setParentContext(ctx);\n    }\n\n    set(this);\n  }\n\n  addLookupProperty(key: string) {\n    const innerName = getInnerName(key);\n\n    Object.defineProperty(this, key, {\n      get() {\n        return this.lookup(innerName);\n      },\n      set(value) {\n        throw new Error(\n          `Context: Unable to set \"${key}\" to \\`${JSON.stringify(\n            value\n          )}\\`. Context properties cannot be set directly. Use context.run() instead.`\n        );\n      },\n    });\n  }\n\n  // @ts-ignore - we actually do use lookup\n  private lookup(key: string) {\n    let ctx: Context = this;\n    do {\n      if (ctx.hasOwnProperty(key)) {\n        return ctx[key];\n      }\n      if (Context.is(ctx.parentContext)) {\n        ctx = ctx.parentContext;\n      } else {\n        return;\n      }\n    } while (ctx);\n  }\n\n  private setParentContext(parentContext: Context) {\n    if (Context.is(this)) {\n      this._parentContext = parentContext;\n    }\n  }\n\n  get parentContext(): Context | null {\n    return this._parentContext;\n  }\n}\n\nfunction createContext(init?: Init) {\n  const storage = {\n    ctx: undefined,\n  };\n\n  const queryableProperties: TQueryableProperties = {};\n\n  function addQueryableProperties(ctxRef: TypeCTXRef): TQueryableProperties {\n    if (!ctxRef || typeof ctxRef !== 'object') {\n      return {};\n    }\n\n    for (const key in ctxRef) {\n      if (Object.prototype.hasOwnProperty.call(ctxRef, key)) {\n        queryableProperties[key] = true;\n      }\n    }\n\n    return queryableProperties;\n  }\n\n  function use(): Context | void {\n    return storage.ctx;\n  }\n  function set(value: any) {\n    return (storage.ctx = value);\n  }\n  function clear() {\n    const ctx = use();\n\n    if (!Context.is(ctx)) {\n      return;\n    }\n\n    set(ctx.parentContext);\n  }\n  function run(ctxRef: TypeCTXRef, fn: ICTXFN) {\n    const ctx = new Context({ set, use, addQueryableProperties, init }, ctxRef);\n\n    const res = fn(ctx);\n\n    clear();\n    return res;\n  }\n\n  function bind(\n    ctxRef: TypeCTXRef,\n    fn: (...args: any[]) => any,\n    ...args: any[]\n  ) {\n    return function(...runTimeArgs: any[]) {\n      return run(ctxRef, function() {\n        return fn(...args, ...runTimeArgs);\n      });\n    };\n  }\n\n  return {\n    use,\n    run,\n    bind,\n  };\n}\n\nexport default createContext;\n"],"names":["getInnerName","name","Context","ctxRef","use","set","addQueryableProperties","init","ctx","usedRef","queryableProperties","key","Object","prototype","hasOwnProperty","call","addLookupProperty","setParentContext","is","value","innerName","defineProperty","get","lookup","Error","JSON","stringify","parentContext","_parentContext","createContext","storage","undefined","clear","run","fn","res","bind","args","runTimeArgs"],"mappings":"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"}